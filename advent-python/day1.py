# DONE first_c could be taken outside of the loop
# DONE remove the hello_dave
# DONE is_equal function doesn't do much
# DONE put the solution into a function
# DONE print statements can be deleted

def puzzle1(puzzle_input):
    previous_c = ""
    running_total = 0

    if puzzle_input[-1] == puzzle_input[:1]:
        running_total = running_total + int(puzzle_input[:1])

    for c_now in puzzle_input:
        if c_now == previous_c:
            running_total = running_total + int(previous_c)
        
        previous_c = c_now

    return running_total

print(puzzle1("12345"))
print(puzzle1("112233"))
print(puzzle1("12113341"))
print(puzzle


#======================================================
# Alternative way of solving using map/filter
#======================================================
def validate(x):
    try:
        val = int(x)
    except ValueError as e:
        return {
            "error_type": "conversion",
            "object": x
        }

    return None

def is_not_none(x):
    return x is not None

def print_validation_error(x):
    print("Error ['" + x["error_type"] + "'] processing object ['" + x['object'] + "']")

def compare_ints(x, y):
    if x == y:
        return x
    return 0

def puzzle1_alt(puzzle_input):
    # convert to array first
    array = list(puzzle_input)

    errors = map(validate, array)
    errors = filter(is_not_none, errors)

    if (errors):
        print("There were errors processing input ['" + puzzle_input + "']. Please correct the following:")
        map(print_validation_error, errors)
        return 0
    
    # convert to integers
    list_of_numbers = map(int, array)

    previous_c = -1
    running_total = 0
    
    # comparison is circular, one trick is to add first character to the end
    list_of_numbers.append(list_of_numbers[0])

    for c_now in list_of_numbers:
        running_total = running_total + compare_ints(c_now, previous_c)
        previous_c = c_now

    return running_total

print(puzzle1_alt("12ba5"))
print(puzzle1_alt("112233"))
print(puzzle1_alt("12113341"))
print(puzzle1_alt



